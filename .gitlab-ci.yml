stages:
  - lint
  - test
  - build

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  DOCKER_TLS_CERTDIR: ""

cache:
  paths:
    - .cache/pip
    - venv/

lint:
  stage: lint
  image: python:3.9
  before_script:
    - python --version
    - pip install flake8 pylint
  script:
    - flake8 app.py --max-line-length=120
    - pylint app.py --disable=C0114,C0116,W0511
  only:
    - merge_requests
    - main

test:
  stage: test
  image: python:3.9
  before_script:
    - python -m venv venv
    - source venv/bin/activate  # Linux/MacOS
    - pip install --upgrade pip
    - pip install -r requirements.txt pytest pytest-cov flake8
  script:
    - flake8 app.py --max-line-length=120 --ignore=F401
    - python -m pytest tests/ -v --cov=app --cov-report=xml
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
    paths:
      - coverage.xml
  only:
    - merge_requests
    - main

build:
  stage: build
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
  script:
    - docker build -t $IMAGE_TAG .
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push $IMAGE_TAG
  only:
    - main